version: '3.8'

services:
    # PHP & Laravel Application
    app:
        build:
            context: .
            dockerfile: ./devops/local/Dockerfile
        container_name: flight-app
        working_dir: /var/www
        volumes:
            - .:/var/www
            - ./devops/local/php.ini:/usr/local/etc/php/php.ini
            - ./storage:/var/www/storage
            - ./bootstrap/cache:/var/www/bootstrap/cache
        networks:
            - flight-network
        environment:
            XDEBUG_MODE: debug
            XDEBUG_CONFIG: client_host=host.docker.internal client_port=9003
        depends_on:
            db:
                condition: service_healthy # Wait for db health check to pass
        #entrypoint: ["./entrypoint.sh"]  # You can add this if you're creating an entrypoint script

    # Nginx Web Server
    web:
        image: nginx:stable-alpine
        container_name: flight-web
        ports:
            - "8484:80" # Serve the app at localhost:8484
        volumes:
            - .:/var/www
            - ./devops/local/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./storage:/var/www/storage
            - ./bootstrap/cache:/var/www/bootstrap/cache
        networks:
            - flight-network
        depends_on:
            - app

    # MySQL Database
    # db:
    #     image: mysql:8.0
    #     command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    #     container_name: flight-db
    #     ports:
    #         - "3306:3306"
    #     environment:
    #         MYSQL_ROOT_PASSWORD: root
    #         MYSQL_DATABASE: flight_tracker
    #         MYSQL_USER: user
    #         MYSQL_PASSWORD: password
    #     volumes:
    #         - db-data:/var/lib/mysql
    #     networks:
    #         - flight-network
    #     healthcheck:
    #         test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "user", "-ppassword" ]
    #         interval: 5s
    #         retries: 10
    #         start_period: 10s
    #         timeout: 5s

    # PostgreSQL Database
    db:
        image: postgres:14
        container_name: flight-db
        ports:
            - "5432:5432"
        environment:
            POSTGRES_USER: user
            POSTGRES_PASSWORD: password
            POSTGRES_DB: flight_tracker
        volumes:
            - db-data:/var/lib/postgresql/data
        networks:
            - flight-network
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "user", "-d", "flight_tracker"]
            interval: 5s
            retries: 10
            start_period: 10s
            timeout: 5s

    # # Laravel Echo Server
    # echo-server:
    #     image: node:16-alpine
    #     container_name: flight-echo-server
    #     working_dir: /var/www
    #     volumes:
    #         - .:/var/www
    #     networks:
    #         - flight-network
    #     ports:
    #         - "6001:6001" # WebSocket server port
    #     command: >
    #         sh -c "
    #         npm install &&
    #         npm install -g laravel-echo-server &&
    #         laravel-echo-server start
    #         "
    #     environment:
    #         LARAVEL_ECHO_SERVER_AUTH_HOST: http://flight-web
    #         LARAVEL_ECHO_SERVER_REDIS_HOST: redis
    #     depends_on:
    #         - redis

    # # Redis
    # redis:
    #     image: redis:alpine
    #     container_name: flight-redis
    #     ports:
    #         - "6379:6379"
    #     networks:
    #         - flight-network

volumes:
    db-data:


networks:
    flight-network:
        driver: bridge
